{% extends 'banner.html.twig' %}
{% block content %}


    <style type="text/css">
        .user {
            font-weight: bold;
            color: black;
        }

        .time {
            color: gray;
        }

        .userComment {
            color: #000;
        }
    </style>
    <br>
    <div class="jumbotron text-center">
        <h1 class="display-4">SQL Injection</h1>
        <p class="lead">{{ role }}</p>
        <hr class="my-4">


        <p class="font-weight-light"> An SQL injection attack consists of 'injection' of an
            SQL query via the input parameter from the client to the application.

            A successful SQL injection can read sensitive data from the database ('Select'),
            modify database data ('Insert/Update/Delete'), execute administration operations on
            the database (shutdown the DBMS), recover the content of a given file present
            on the DBMS file system and in some cases issue commands to the operating system.</p>
        <hr class="my-4">
        Primary Defenses:
        <p class="font-weight-light">- Prepared Statements (with Parameterized Queries)
            <br>- Stored Procedures
            <br>- Input Sanitization</p>
        <hr class="my-4">
        Acknowledgments:
        <p class="font-weight-light">- It is a <b>developer's responsibility</b> to implement the "Data Access Layer" of
            choice in a secure manner.</p>
        <p class="font-weight-light">- MySQLi, PDO, Doctrine and other solutions <b>do not provide default security</b>.
        </p>
        <hr class="my-4">


        Below you can find three different implementations of the login system:
        <p class="font-weight-light">- Only the first one is vulnerable to SQL Injection.
            <br>- The second one is not vulnerable to SQL Injection. However, it does not implement all recommended
            security measures.
            <br>- The third one adopts the most important security measures.</p>
        <hr class="my-4">


        <div class="alert alert-danger" role="alert">
            Implementation 1 -> MySQLi
            <div class="d-flex justify-content-sm-center">

                <div class="card bg-light mb-4" style="max-width: 18rem;">
                    <div class="card-body">

                        <form action="{{ action6 }}" method="post">
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <input type="text" class="form-control" id="user_name" name="user_name"
                                           placeholder="Username" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <input type="password" class="form-control" id="password" name="password"
                                           placeholder="Password" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <button type="submit" class="btn btn-primary btn-lg btn-block" value="Submit">
                                        Login
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample"
                    aria-expanded="false" aria-controls="collapseExample">
                #Hint
            </button>
            </p>
            <div class="collapse" id="collapseExample">

                <div class="text-left"><pre class="prettyprint">
//Input sanitization: No
//Parameterized queries: No
//Vulnerable to SQLI: Yes
//Severity: High

public function getUsernamePassword($username, $password)
{
        $query_string  = "SELECT * ";
        $query_string .= "FROM bank ";
        $query_string .= "WHERE username='$username' ";
        $query_string .= "AND password='$password'";
        return $query_string;
}</pre>
                </div>


            </div>

        </div>

        <div class="alert alert-warning" role="alert">
            Implementation 2 -> PDO

            <div class="d-flex justify-content-sm-center">

                <div class="card bg-light mb-4" style="max-width: 18rem;">
                    <div class="card-body">

                        <form action="{{ action7 }}" method="post">
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <input type="text" class="form-control" id="user_name" name="user_name"
                                           placeholder="Username" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <input type="password" class="form-control" id="password" name="password"
                                           placeholder="Password" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <button type="submit" class="btn btn-primary btn-lg btn-block" value="Submit">
                                        Login
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample1"
                    aria-expanded="false" aria-controls="collapseExample1">
                #Hint
            </button>
            </p>
            <div class="collapse" id="collapseExample1">

                <div class="text-left"><pre class="prettyprint">
//Input sanitization: No
//Parameterized queries: Yes
//Vulnerable to SQLI: No
//Severity: Medium

public function getUsernamePassword()
{
        $query_string  = "SELECT * ";
        $query_string .= "FROM bank ";
        $query_string .= "WHERE username = :username ";
        $query_string .= "AND password = :password;";
        return $query_string;
}</pre>
                </div>


            </div>

        </div>

        <div class="alert alert-success" role="alert">
            Implementation 3 -> PDO (Doctrine)
            <div class="d-flex justify-content-sm-center">

                <div class="card bg-light mb-4" style="max-width: 18rem;">
                    <div class="card-body">

                        <form action="{{ action8 }}" method="post">
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <input type="text" class="form-control" id="user_name" name="user_name"
                                           placeholder="Username" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <input type="password" class="form-control" id="password" name="password"
                                           placeholder="Password" required>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <button type="submit" class="btn btn-primary btn-lg btn-block" value="Submit">
                                        Login
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample2"
                    aria-expanded="false" aria-controls="collapseExample2">
                #Hint
            </button>
            </p>
            <div class="collapse" id="collapseExample2">

                <div class="text-left"><pre class="prettyprint">
//Input sanitization: Yes
//Parameterized queries: Yes
//Vulnerable to SQLI: Yes
//Level of protection against SQLi: High

$queryBuilder = $queryBuilder->select('username')
            ->addSelect('password')
            ->from('bank')
            ->where("username = :username")
            ->andWhere("password = :password")
            ->setParameter('username', $username)
            ->setParameter('password', $password);</pre>
                </div>


            </div>

        </div>


        <hr class="my-4">
        <form action="{{ action9 }}" method="post">
            <div class="row">
                <div class="col-md-12">
                    <textarea class="form-control" id="mainComment" name="mainComment"
                              placeholder="Add a public comment..." cols="30" rows="2" required></textarea><br>
                    <button style="float:middle" class="btn-primary btn" id="addComment">Add Comment</button>
                </div>
            </div>
        </form>
        <br>
        <div class="row">
            <div class="col-md-12">
                <h2><b>{{ quantity }} Comments</b></h2>
            </div>
        </div>


        {% for comments in comments %}
            <hr class="my-4">
            <div class="user">{{ comments.userid }} <span class="time">{{ comments.date }}</span></div>
            <div class="userComment">{{ comments.comment }}</div>

        {% endfor %}


    </div>
{% endblock %}